version: '3'

volumes:
  sportyspots_postgres_data_local: {}
  sportyspots_postgres_backup_local: {}

services:
  django: &django
    container_name: sportyspots-django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: sportyspots-django:latest
    depends_on:
      - postgres
      - mailhog
    volumes:
      - .:/app
    env_file:
      - ./.env.local
    ports:
      - "8000:8000"
    restart: "no"
    command: /start.sh
    environment:
      - USE_DOCKER=yes
#    environment:
#      - POSTGRES_USER=seedorf
#      - USE_DOCKER=yes
#    args:
#      - GIT_COMMIT
#    env_file:
#      - ./.env
#    extra_hosts:
#      - "somehost:162.242.195.82"
#      - "otherhost:50.31.209.229"
#    healthcheck:
#      test: ["CMD", "curl", "-f", "http://localhost"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"

  celeryworker:
    # https://github.com/docker/compose/issues/3220
    <<: *django
    container_name: sportyspots-celeryworker
    image: sportyspots-celeryworker:latest
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celeryworker.sh

  celerybeat:
    # https://github.com/docker/compose/issues/3220
    <<: *django
    container_name: sportyspots-celerybeat
    image: sportyspots-celerybeat:latest
    depends_on:
      - redis
      - postgres
      - mailhog
    ports: []
    command: /start-celerybeat.sh

  postgres:
    container_name: sportyspots-postgres
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    volumes:
      - sportyspots_postgres_data_local:/var/lib/postgresql/data
      - sportyspots_postgres_backup_local:/backups
    env_file:
      - ./.env.local

  mailhog:
    container_name: sportyspots-mailhog
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  redis:
    container_name: sportyspots-redis
    image: redis:4.0
