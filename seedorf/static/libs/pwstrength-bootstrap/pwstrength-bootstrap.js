
(function(r,f) {
    var a=f();
    if(typeof a!=='object')return;
    var e=[typeof module==='object'&&typeof module.exports==='object'?module.exports:null,typeof window!=='undefined'?window:null,r&&r!==window?r:null];
    for(var i in a){e[0]&&(e[0][i]=a[i]);e[1]&&i!=='__esModule'&&(e[1][i] = a[i]);e[2]&&(e[2][i]=a[i]);}
})(this,function(){
    return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./libs/pwstrength-bootstrap/pwstrength-bootstrap.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./libs/pwstrength-bootstrap/pwstrength-bootstrap.js":
/*!***********************************************************!*\
  !*** ./libs/pwstrength-bootstrap/pwstrength-bootstrap.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../node_modules/pwstrength-bootstrap/dist/pwstrength-bootstrap.js */ \"./node_modules/pwstrength-bootstrap/dist/pwstrength-bootstrap.js\");\n\n\n//# sourceURL=webpack:///./libs/pwstrength-bootstrap/pwstrength-bootstrap.js?");

/***/ }),

/***/ "./node_modules/pwstrength-bootstrap/dist/pwstrength-bootstrap.js":
/*!************************************************************************!*\
  !*** ./node_modules/pwstrength-bootstrap/dist/pwstrength-bootstrap.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {/*!\n* jQuery Password Strength plugin for Twitter Bootstrap\n* Version: 3.0.3\n*\n* Copyright (c) 2008-2013 Tane Piper\n* Copyright (c) 2013 Alejandro Blanco\n* Dual licensed under the MIT and GPL licenses.\n*/\n\n(function (jQuery) {\n// Source: src/i18n.js\n\n\n\n\nvar i18n = {};\n\n(function (i18n, i18next) {\n    'use strict';\n\n    i18n.fallback = {\n        \"wordMinLength\": \"Your password is too short\",\n        \"wordMaxLength\": \"Your password is too long\",\n        \"wordInvalidChar\": \"Your password contains an invalid character\",\n        \"wordNotEmail\": \"Do not use your email as your password\",\n        \"wordSimilarToUsername\": \"Your password cannot contain your username\",\n        \"wordTwoCharacterClasses\": \"Use different character classes\",\n        \"wordRepetitions\": \"Too many repetitions\",\n        \"wordSequences\": \"Your password contains sequences\",\n        \"errorList\": \"Errors:\",\n        \"veryWeak\": \"Very Weak\",\n        \"weak\": \"Weak\",\n        \"normal\": \"Normal\",\n        \"medium\": \"Medium\",\n        \"strong\": \"Strong\",\n        \"veryStrong\": \"Very Strong\"\n    };\n\n    i18n.t = function (key) {\n        var result = '';\n\n        // Try to use i18next.com\n        if (i18next) {\n            result = i18next.t(key);\n        } else {\n            // Fallback to english\n            result = i18n.fallback[key];\n        }\n\n        return result === key ? '' : result;\n    };\n}(i18n, window.i18next));\n\n// Source: src/rules.js\n\n\n\n\nvar rulesEngine = {};\n\ntry {\n    if (!jQuery && module && module.exports) {\n        var jQuery = __webpack_require__(/*! jquery */ \"jquery\"),\n            jsdom = __webpack_require__(/*! jsdom */ \"jsdom\").jsdom;\n        jQuery = jQuery(jsdom().defaultView);\n    }\n} catch (ignore) {}\n\n(function ($, rulesEngine) {\n    \"use strict\";\n    var validation = {};\n\n    rulesEngine.forbiddenSequences = [\n        \"0123456789\", \"abcdefghijklmnopqrstuvwxyz\", \"qwertyuiop\", \"asdfghjkl\",\n        \"zxcvbnm\", \"!@#$%^&*()_+\"\n    ];\n\n    validation.wordNotEmail = function (options, word, score) {\n        if (word.match(/^([\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*[\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+@((((([a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(\\d{1,3}\\.){3}\\d{1,3}(\\:\\d{1,5})?)$/i)) {\n            return score;\n        }\n        return 0;\n    };\n\n    validation.wordMinLength = function (options, word, score) {\n        var wordlen = word.length,\n            lenScore = Math.pow(wordlen, options.rules.raisePower);\n        if (wordlen < options.common.minChar) {\n            lenScore = (lenScore + score);\n        }\n        return lenScore;\n    };\n\n    validation.wordMaxLength = function (options, word, score) {\n        var wordlen = word.length,\n            lenScore = Math.pow(wordlen, options.rules.raisePower);\n        if (wordlen > options.common.maxChar) {\n            return score;\n        }\n        return lenScore;\n    };\n\n    validation.wordInvalidChar = function (options, word, score) {\n        if (options.common.invalidCharsRegExp.test(word)) {\n            return score;\n        }\n        return 0;\n    };\n\n    validation.wordMinLengthStaticScore = function (options, word, score) {\n        return word.length < options.common.minChar ? 0 : score;\n    };\n\n    validation.wordMaxLengthStaticScore = function (options, word, score) {\n        return word.length > options.common.maxChar ? 0 : score;\n    };\n\n\n    validation.wordSimilarToUsername = function (options, word, score) {\n        var username = $(options.common.usernameField).val();\n        if (username && word.toLowerCase().match(username.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\=\\?\\:\\.\\\\\\^\\$\\|\\!\\,]/g, \"\\\\$&\").toLowerCase())) {\n            return score;\n        }\n        return 0;\n    };\n\n    validation.wordTwoCharacterClasses = function (options, word, score) {\n        if (word.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) ||\n                (word.match(/([a-zA-Z])/) && word.match(/([0-9])/)) ||\n                (word.match(/(.[!,@,#,$,%,\\^,&,*,?,_,~])/) && word.match(/[a-zA-Z0-9_]/))) {\n            return score;\n        }\n        return 0;\n    };\n\n    validation.wordRepetitions = function (options, word, score) {\n        if (word.match(/(.)\\1\\1/)) { return score; }\n        return 0;\n    };\n\n    validation.wordSequences = function (options, word, score) {\n        var found = false,\n            j;\n        if (word.length > 2) {\n            $.each(rulesEngine.forbiddenSequences, function (idx, seq) {\n                if (found) { return; }\n                var sequences = [seq, seq.split('').reverse().join('')];\n                $.each(sequences, function (idx, sequence) {\n                    for (j = 0; j < (word.length - 2); j += 1) { // iterate the word trough a sliding window of size 3:\n                        if (sequence.indexOf(word.toLowerCase().substring(j, j + 3)) > -1) {\n                            found = true;\n                        }\n                    }\n                });\n            });\n            if (found) { return score; }\n        }\n        return 0;\n    };\n\n    validation.wordLowercase = function (options, word, score) {\n        return word.match(/[a-z]/) && score;\n    };\n\n    validation.wordUppercase = function (options, word, score) {\n        return word.match(/[A-Z]/) && score;\n    };\n\n    validation.wordOneNumber = function (options, word, score) {\n        return word.match(/\\d+/) && score;\n    };\n\n    validation.wordThreeNumbers = function (options, word, score) {\n        return word.match(/(.*[0-9].*[0-9].*[0-9])/) && score;\n    };\n\n    validation.wordOneSpecialChar = function (options, word, score) {\n        return word.match(/[!,@,#,$,%,\\^,&,*,?,_,~]/) && score;\n    };\n\n    validation.wordTwoSpecialChar = function (options, word, score) {\n        return word.match(/(.*[!,@,#,$,%,\\^,&,*,?,_,~].*[!,@,#,$,%,\\^,&,*,?,_,~])/) && score;\n    };\n\n    validation.wordUpperLowerCombo = function (options, word, score) {\n        return word.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && score;\n    };\n\n    validation.wordLetterNumberCombo = function (options, word, score) {\n        return word.match(/([a-zA-Z])/) && word.match(/([0-9])/) && score;\n    };\n\n    validation.wordLetterNumberCharCombo = function (options, word, score) {\n        return word.match(/([a-zA-Z0-9].*[!,@,#,$,%,\\^,&,*,?,_,~])|([!,@,#,$,%,\\^,&,*,?,_,~].*[a-zA-Z0-9])/) && score;\n    };\n\n    validation.wordIsACommonPassword = function (options, word, score) {\n        if ($.inArray(word, options.rules.commonPasswords) >= 0) {\n            return score;\n        }\n        return 0;\n    };\n\n    rulesEngine.validation = validation;\n\n    rulesEngine.executeRules = function (options, word) {\n        var totalScore = 0;\n\n        $.each(options.rules.activated, function (rule, active) {\n            if (active) {\n                var score = options.rules.scores[rule],\n                    funct = rulesEngine.validation[rule],\n                    result,\n                    errorMessage;\n\n                if (!$.isFunction(funct)) {\n                    funct = options.rules.extra[rule];\n                }\n\n                if ($.isFunction(funct)) {\n                    result = funct(options, word, score);\n                    if (result) {\n                        totalScore += result;\n                    }\n                    if (result < 0 || (!$.isNumeric(result) && !result)) {\n                        errorMessage = options.ui.spanError(options, rule);\n                        if (errorMessage.length > 0) {\n                            options.instances.errors.push(errorMessage);\n                        }\n                    }\n                }\n            }\n        });\n\n        return totalScore;\n    };\n}(jQuery, rulesEngine));\n\ntry {\n    if (module && module.exports) {\n        module.exports = rulesEngine;\n    }\n} catch (ignore) {}\n\n// Source: src/options.js\n\n\n\n\nvar defaultOptions = {};\n\ndefaultOptions.common = {};\ndefaultOptions.common.minChar = 6;\ndefaultOptions.common.maxChar = 20;\ndefaultOptions.common.usernameField = \"#username\";\ndefaultOptions.common.invalidCharsRegExp = new RegExp(/[\\s,'\"]/);\ndefaultOptions.common.userInputs = [\n    // Selectors for input fields with user input\n];\ndefaultOptions.common.onLoad = undefined;\ndefaultOptions.common.onKeyUp = undefined;\ndefaultOptions.common.onScore = undefined;\ndefaultOptions.common.zxcvbn = false;\ndefaultOptions.common.zxcvbnTerms = [\n    // List of disrecommended words\n];\ndefaultOptions.common.events = [\"keyup\", \"change\", \"paste\"];\ndefaultOptions.common.debug = false;\n\ndefaultOptions.rules = {};\ndefaultOptions.rules.extra = {};\ndefaultOptions.rules.scores = {\n    wordNotEmail: -100,\n    wordMinLength: -50,\n    wordMaxLength: -50,\n    wordInvalidChar: -100,\n    wordSimilarToUsername: -100,\n    wordSequences: -20,\n    wordTwoCharacterClasses: 2,\n    wordRepetitions: -25,\n    wordLowercase: 1,\n    wordUppercase: 3,\n    wordOneNumber: 3,\n    wordThreeNumbers: 5,\n    wordOneSpecialChar: 3,\n    wordTwoSpecialChar: 5,\n    wordUpperLowerCombo: 2,\n    wordLetterNumberCombo: 2,\n    wordLetterNumberCharCombo: 2,\n    wordIsACommonPassword: -100\n};\ndefaultOptions.rules.activated = {\n    wordNotEmail: true,\n    wordMinLength: true,\n    wordMaxLength: false,\n    wordInvalidChar: false,\n    wordSimilarToUsername: true,\n    wordSequences: true,\n    wordTwoCharacterClasses: true,\n    wordRepetitions: true,\n    wordLowercase: true,\n    wordUppercase: true,\n    wordOneNumber: true,\n    wordThreeNumbers: true,\n    wordOneSpecialChar: true,\n    wordTwoSpecialChar: true,\n    wordUpperLowerCombo: true,\n    wordLetterNumberCombo: true,\n    wordLetterNumberCharCombo: true,\n    wordIsACommonPassword: true\n};\ndefaultOptions.rules.raisePower = 1.4;\n// List taken from https://github.com/danielmiessler/SecLists (MIT License)\ndefaultOptions.rules.commonPasswords = [\n    '123456',\n    'password',\n    '12345678',\n    'qwerty',\n    '123456789',\n    '12345',\n    '1234',\n    '111111',\n    '1234567',\n    'dragon',\n    '123123',\n    'baseball',\n    'abc123',\n    'football',\n    'monkey',\n    'letmein',\n    '696969',\n    'shadow',\n    'master',\n    '666666',\n    'qwertyuiop',\n    '123321',\n    'mustang',\n    '1234567890',\n    'michael',\n    '654321',\n    'pussy',\n    'superman',\n    '1qaz2wsx',\n    '7777777',\n    'fuckyou',\n    '121212',\n    '000000',\n    'qazwsx',\n    '123qwe',\n    'killer',\n    'trustno1',\n    'jordan',\n    'jennifer',\n    'zxcvbnm',\n    'asdfgh',\n    'hunter',\n    'buster',\n    'soccer',\n    'harley',\n    'batman',\n    'andrew',\n    'tigger',\n    'sunshine',\n    'iloveyou',\n    'fuckme',\n    '2000',\n    'charlie',\n    'robert',\n    'thomas',\n    'hockey',\n    'ranger',\n    'daniel',\n    'starwars',\n    'klaster',\n    '112233',\n    'george',\n    'asshole',\n    'computer',\n    'michelle',\n    'jessica',\n    'pepper',\n    '1111',\n    'zxcvbn',\n    '555555',\n    '11111111',\n    '131313',\n    'freedom',\n    '777777',\n    'pass',\n    'fuck',\n    'maggie',\n    '159753',\n    'aaaaaa',\n    'ginger',\n    'princess',\n    'joshua',\n    'cheese',\n    'amanda',\n    'summer',\n    'love',\n    'ashley',\n    '6969',\n    'nicole',\n    'chelsea',\n    'biteme',\n    'matthew',\n    'access',\n    'yankees',\n    '987654321',\n    'dallas',\n    'austin',\n    'thunder',\n    'taylor',\n    'matrix'\n];\n\ndefaultOptions.ui = {};\ndefaultOptions.ui.bootstrap2 = false;\ndefaultOptions.ui.bootstrap3 = false;\ndefaultOptions.ui.colorClasses = [\n    \"danger\", \"danger\", \"danger\", \"warning\", \"warning\", \"success\"\n];\ndefaultOptions.ui.showProgressBar = true;\ndefaultOptions.ui.progressBarEmptyPercentage = 1;\ndefaultOptions.ui.progressBarMinWidth = 1;\ndefaultOptions.ui.progressBarMinPercentage = 1;\ndefaultOptions.ui.progressExtraCssClasses = '';\ndefaultOptions.ui.progressBarExtraCssClasses = '';\ndefaultOptions.ui.showPopover = false;\ndefaultOptions.ui.popoverPlacement = \"bottom\";\ndefaultOptions.ui.showStatus = false;\ndefaultOptions.ui.spanError = function (options, key) {\n    \"use strict\";\n    var text = options.i18n.t(key);\n    if (!text) { return ''; }\n    return '<span style=\"color: #d52929\">' + text + '</span>';\n};\ndefaultOptions.ui.popoverError = function (options) {\n    \"use strict\";\n    var errors = options.instances.errors,\n        errorsTitle = options.i18n.t(\"errorList\"),\n        message = \"<div>\" + errorsTitle + \"<ul class='error-list' style='margin-bottom: 0;'>\";\n\n    jQuery.each(errors, function (idx, err) {\n        message += \"<li>\" + err + \"</li>\";\n    });\n    message += \"</ul></div>\";\n    return message;\n};\ndefaultOptions.ui.showVerdicts = true;\ndefaultOptions.ui.showVerdictsInsideProgressBar = false;\ndefaultOptions.ui.useVerdictCssClass = false;\ndefaultOptions.ui.showErrors = false;\ndefaultOptions.ui.showScore = false;\ndefaultOptions.ui.container = undefined;\ndefaultOptions.ui.viewports = {\n    progress: undefined,\n    verdict: undefined,\n    errors: undefined,\n    score: undefined\n};\ndefaultOptions.ui.scores = [0, 14, 26, 38, 50];\n\ndefaultOptions.i18n = {};\ndefaultOptions.i18n.t = i18n.t;\n\n// Source: src/ui.js\n\n\n\n\nvar ui = {};\n\n(function ($, ui) {\n    \"use strict\";\n\n    var statusClasses = [\"error\", \"warning\", \"success\"],\n        verdictKeys = [\n            \"veryWeak\", \"weak\", \"normal\", \"medium\", \"strong\", \"veryStrong\"\n        ];\n\n    ui.getContainer = function (options, $el) {\n        var $container;\n\n        $container = $(options.ui.container);\n        if (!($container && $container.length === 1)) {\n            $container = $el.parent();\n        }\n        return $container;\n    };\n\n    ui.findElement = function ($container, viewport, cssSelector) {\n        if (viewport) {\n            return $container.find(viewport).find(cssSelector);\n        }\n        return $container.find(cssSelector);\n    };\n\n    ui.getUIElements = function (options, $el) {\n        var $container, result;\n\n        if (options.instances.viewports) {\n            return options.instances.viewports;\n        }\n\n        $container = ui.getContainer(options, $el);\n\n        result = {};\n        result.$progressbar = ui.findElement($container, options.ui.viewports.progress, \"div.progress\");\n        if (options.ui.showVerdictsInsideProgressBar) {\n            result.$verdict = result.$progressbar.find(\"span.password-verdict\");\n        }\n\n        if (!options.ui.showPopover) {\n            if (!options.ui.showVerdictsInsideProgressBar) {\n                result.$verdict = ui.findElement($container, options.ui.viewports.verdict, \"span.password-verdict\");\n            }\n            result.$errors = ui.findElement($container, options.ui.viewports.errors, \"ul.error-list\");\n        }\n        result.$score = ui.findElement($container, options.ui.viewports.score,\n                                       \"span.password-score\");\n\n        options.instances.viewports = result;\n        return result;\n    };\n\n    ui.initProgressBar = function (options, $el) {\n        var $container = ui.getContainer(options, $el),\n            progressbar = \"<div class='progress \";\n\n        if (options.ui.bootstrap2) {\n            // Boostrap 2\n            progressbar += options.ui.progressBarExtraCssClasses +\n                \"'><div class='\";\n        } else {\n            // Bootstrap 3 & 4\n            progressbar += options.ui.progressExtraCssClasses + \"'><div class='\" +\n                options.ui.progressBarExtraCssClasses + \" progress-\";\n        }\n        progressbar += \"bar'>\";\n\n        if (options.ui.showVerdictsInsideProgressBar) {\n            progressbar += \"<span class='password-verdict'></span>\";\n        }\n\n        progressbar += \"</div></div>\";\n\n        if (options.ui.viewports.progress) {\n            $container.find(options.ui.viewports.progress).append(progressbar);\n        } else {\n            $(progressbar).insertAfter($el);\n        }\n    };\n\n    ui.initHelper = function (options, $el, html, viewport) {\n        var $container = ui.getContainer(options, $el);\n        if (viewport) {\n            $container.find(viewport).append(html);\n        } else {\n            $(html).insertAfter($el);\n        }\n    };\n\n    ui.initVerdict = function (options, $el) {\n        ui.initHelper(options, $el, \"<span class='password-verdict'></span>\",\n                      options.ui.viewports.verdict);\n    };\n\n    ui.initErrorList = function (options, $el) {\n        ui.initHelper(options, $el, \"<ul class='error-list'></ul>\",\n                      options.ui.viewports.errors);\n    };\n\n    ui.initScore = function (options, $el) {\n        ui.initHelper(options, $el, \"<span class='password-score'></span>\",\n                      options.ui.viewports.score);\n    };\n\n    ui.initPopover = function (options, $el) {\n        try {\n            $el.popover(\"destroy\");\n        } catch (error) {\n            // Bootstrap 4.2.X onwards\n            $el.popover(\"dispose\");\n        }\n        $el.popover({\n            html: true,\n            placement: options.ui.popoverPlacement,\n            trigger: \"manual\",\n            content: \" \"\n        });\n    };\n\n    ui.initUI = function (options, $el) {\n        if (options.ui.showPopover) {\n            ui.initPopover(options, $el);\n        } else {\n            if (options.ui.showErrors) { ui.initErrorList(options, $el); }\n            if (options.ui.showVerdicts && !options.ui.showVerdictsInsideProgressBar) {\n                ui.initVerdict(options, $el);\n            }\n        }\n        if (options.ui.showProgressBar) {\n            ui.initProgressBar(options, $el);\n        }\n        if (options.ui.showScore) {\n            ui.initScore(options, $el);\n        }\n    };\n\n    ui.updateProgressBar = function (options, $el, cssClass, percentage) {\n        var $progressbar = ui.getUIElements(options, $el).$progressbar,\n            $bar = $progressbar.find(\".progress-bar\"),\n            cssPrefix = \"progress-\";\n\n        if (options.ui.bootstrap2) {\n            $bar = $progressbar.find(\".bar\");\n            cssPrefix = \"\";\n        }\n\n        $.each(options.ui.colorClasses, function (idx, value) {\n            if (options.ui.bootstrap2 || options.ui.bootstrap3) {\n                $bar.removeClass(cssPrefix + \"bar-\" + value);\n            } else {\n                $bar.removeClass(\"bg-\" + value);\n            }\n        });\n        if (options.ui.bootstrap2 || options.ui.bootstrap3) {\n            $bar.addClass(cssPrefix + \"bar-\" + options.ui.colorClasses[cssClass]);\n        } else {\n            $bar.addClass(\"bg-\" + options.ui.colorClasses[cssClass]);\n        }\n        $bar.css(\"min-width\", options.ui.progressBarMinWidth + 'px');\n        $bar.css(\"width\", percentage + '%');\n    };\n\n    ui.updateVerdict = function (options, $el, cssClass, text) {\n        var $verdict = ui.getUIElements(options, $el).$verdict;\n        $verdict.removeClass(options.ui.colorClasses.join(' '));\n        if (cssClass > -1) {\n            $verdict.addClass(options.ui.colorClasses[cssClass]);\n        }\n        if (options.ui.showVerdictsInsideProgressBar) {\n            $verdict.css('white-space', 'nowrap');\n        }\n        $verdict.html(text);\n    };\n\n    ui.updateErrors = function (options, $el, remove) {\n        var $errors = ui.getUIElements(options, $el).$errors,\n            html = \"\";\n\n        if (!remove) {\n            $.each(options.instances.errors, function (idx, err) {\n                html += \"<li>\" + err + \"</li>\";\n            });\n        }\n        $errors.html(html);\n    };\n\n    ui.updateScore = function (options, $el, score, remove) {\n        var $score = ui.getUIElements(options, $el).$score,\n            html = \"\";\n\n        if (!remove) { html = score.toFixed(2); }\n        $score.html(html);\n    };\n\n    ui.updatePopover = function (options, $el, verdictText, remove) {\n        var popover = $el.data(\"bs.popover\"),\n            html = \"\",\n            hide = true;\n\n        if (options.ui.showVerdicts &&\n                !options.ui.showVerdictsInsideProgressBar &&\n                verdictText.length > 0) {\n            html = \"<h5><span class='password-verdict'>\" + verdictText +\n                \"</span></h5>\";\n            hide = false;\n        }\n        if (options.ui.showErrors) {\n            if (options.instances.errors.length > 0) {\n                hide = false;\n            }\n            html += options.ui.popoverError(options);\n        }\n\n        if (hide || remove) {\n            $el.popover(\"hide\");\n            return;\n        }\n\n        if (options.ui.bootstrap2) { popover = $el.data(\"popover\"); }\n\n        if (popover.$arrow && popover.$arrow.parents(\"body\").length > 0) {\n            $el.find(\"+ .popover .popover-content\").html(html);\n        } else {\n            // It's hidden\n            if (options.ui.bootstrap2 || options.ui.bootstrap3) {\n                popover.options.content = html;\n            } else {\n                popover.config.content = html;\n            }\n            $el.popover(\"show\");\n        }\n    };\n\n    ui.updateFieldStatus = function (options, $el, cssClass, remove) {\n        var $target = $el;\n\n        if (options.ui.bootstrap2) {\n            $target = $el.parents(\".control-group\").first();\n        } else if (options.ui.bootstrap3) {\n            $target = $el.parents(\".form-group\").first();\n        }\n\n        $.each(statusClasses, function (idx, css) {\n            if (options.ui.bootstrap3) {\n                css = \"has-\" + css;\n            } else if (!options.ui.bootstrap2) { // BS4\n                if (css === \"error\") { css = \"danger\"; }\n                css = \"border-\" + css;\n            }\n            $target.removeClass(css);\n        });\n\n        if (remove) { return; }\n\n        cssClass = statusClasses[Math.floor(cssClass / 2)];\n        if (options.ui.bootstrap3) {\n            cssClass = \"has-\" + cssClass;\n        } else if (!options.ui.bootstrap2) { // BS4\n            if (cssClass === \"error\") { cssClass = \"danger\"; }\n            cssClass = \"border-\" + cssClass;\n        }\n        $target.addClass(cssClass);\n    };\n\n    ui.percentage = function (options, score, maximun) {\n        var result = Math.floor(100 * score / maximun),\n            min = options.ui.progressBarMinPercentage;\n\n        result = result <= min ? min : result;\n        result = result > 100 ? 100 : result;\n        return result;\n    };\n\n    ui.getVerdictAndCssClass = function (options, score) {\n        var level, verdict;\n\n        if (score === undefined) { return ['', 0]; }\n\n        if (score <= options.ui.scores[0]) {\n            level = 0;\n        } else if (score < options.ui.scores[1]) {\n            level = 1;\n        } else if (score < options.ui.scores[2]) {\n            level = 2;\n        } else if (score < options.ui.scores[3]) {\n            level = 3;\n        } else if (score < options.ui.scores[4]) {\n            level = 4;\n        } else {\n            level = 5;\n        }\n\n        verdict = verdictKeys[level];\n\n        return [options.i18n.t(verdict), level];\n    };\n\n    ui.updateUI = function (options, $el, score) {\n        var cssClass, barPercentage, verdictText, verdictCssClass;\n\n        cssClass = ui.getVerdictAndCssClass(options, score);\n        verdictText = score === 0 ? '' : cssClass[0];\n        cssClass = cssClass[1];\n        verdictCssClass = options.ui.useVerdictCssClass ? cssClass : -1;\n\n        if (options.ui.showProgressBar) {\n            if (score === undefined) {\n                barPercentage = options.ui.progressBarEmptyPercentage;\n            } else {\n                barPercentage = ui.percentage(options, score, options.ui.scores[4]);\n            }\n            ui.updateProgressBar(options, $el, cssClass, barPercentage);\n            if (options.ui.showVerdictsInsideProgressBar) {\n                ui.updateVerdict(options, $el, verdictCssClass, verdictText);\n            }\n        }\n\n        if (options.ui.showStatus) {\n            ui.updateFieldStatus(options, $el, cssClass, score === undefined);\n        }\n\n        if (options.ui.showPopover) {\n            ui.updatePopover(options, $el, verdictText, score === undefined);\n        } else {\n            if (options.ui.showVerdicts && !options.ui.showVerdictsInsideProgressBar) {\n                ui.updateVerdict(options, $el, verdictCssClass, verdictText);\n            }\n            if (options.ui.showErrors) {\n                ui.updateErrors(options, $el, score === undefined);\n            }\n        }\n\n        if (options.ui.showScore) {\n            ui.updateScore(options, $el, score, score === undefined);\n        }\n    };\n}(jQuery, ui));\n\n// Source: src/methods.js\n\n\n\n\nvar methods = {};\n\n(function ($, methods) {\n    \"use strict\";\n    var onKeyUp, onPaste, applyToAll;\n\n    onKeyUp = function (event) {\n        var $el = $(event.target),\n            options = $el.data(\"pwstrength-bootstrap\"),\n            word = $el.val(),\n            userInputs,\n            verdictText,\n            verdictLevel,\n            score;\n\n        if (options === undefined) { return; }\n\n        options.instances.errors = [];\n        if (word.length === 0) {\n            score = undefined;\n        } else {\n            if (options.common.zxcvbn) {\n                userInputs = [];\n                $.each(options.common.userInputs.concat([options.common.usernameField]), function (idx, selector) {\n                    var value = $(selector).val();\n                    if (value) { userInputs.push(value); }\n                });\n                userInputs = userInputs.concat(options.common.zxcvbnTerms);\n                score = zxcvbn(word, userInputs).guesses;\n                score = Math.log(score) * Math.LOG2E;\n            } else {\n                score = rulesEngine.executeRules(options, word);\n            }\n            if ($.isFunction(options.common.onScore)) {\n                score = options.common.onScore(options, word, score);\n            }\n        }\n        ui.updateUI(options, $el, score);\n        verdictText = ui.getVerdictAndCssClass(options, score);\n        verdictLevel = verdictText[1];\n        verdictText = verdictText[0];\n\n        if (options.common.debug) {\n            console.log(score + ' - ' + verdictText);\n        }\n\n        if ($.isFunction(options.common.onKeyUp)) {\n            options.common.onKeyUp(event, {\n                score: score,\n                verdictText: verdictText,\n                verdictLevel: verdictLevel\n            });\n        }\n    };\n\n    onPaste = function (event) {\n        // This handler is necessary because the paste event fires before the\n        // content is actually in the input, so we cannot read its value right\n        // away. Therefore, the timeouts.\n        var $el = $(event.target),\n            word = $el.val(),\n            tries = 0,\n            callback;\n\n        callback = function () {\n            var newWord = $el.val();\n\n            if (newWord !== word) {\n                onKeyUp(event);\n            } else if (tries < 3) {\n                tries += 1;\n                setTimeout(callback, 100);\n            }\n        };\n\n        setTimeout(callback, 100);\n    };\n\n    methods.init = function (settings) {\n        this.each(function (idx, el) {\n            // Make it deep extend (first param) so it extends also the\n            // rules and other inside objects\n            var clonedDefaults = $.extend(true, {}, defaultOptions),\n                localOptions = $.extend(true, clonedDefaults, settings),\n                $el = $(el);\n\n            localOptions.instances = {};\n            $el.data(\"pwstrength-bootstrap\", localOptions);\n\n            $.each(localOptions.common.events, function (idx, eventName) {\n                var handler = eventName === \"paste\" ? onPaste : onKeyUp;\n                $el.on(eventName, handler);\n            });\n\n            ui.initUI(localOptions, $el);\n            $el.trigger(\"keyup\");\n\n            if ($.isFunction(localOptions.common.onLoad)) {\n                localOptions.common.onLoad();\n            }\n        });\n\n        return this;\n    };\n\n    methods.destroy = function () {\n        this.each(function (idx, el) {\n            var $el = $(el),\n                options = $el.data(\"pwstrength-bootstrap\"),\n                elements = ui.getUIElements(options, $el);\n            elements.$progressbar.remove();\n            elements.$verdict.remove();\n            elements.$errors.remove();\n            $el.removeData(\"pwstrength-bootstrap\");\n        });\n    };\n\n    methods.forceUpdate = function () {\n        this.each(function (idx, el) {\n            var event = { target: el };\n            onKeyUp(event);\n        });\n    };\n\n    methods.addRule = function (name, method, score, active) {\n        this.each(function (idx, el) {\n            var options = $(el).data(\"pwstrength-bootstrap\");\n\n            options.rules.activated[name] = active;\n            options.rules.scores[name] = score;\n            options.rules.extra[name] = method;\n        });\n    };\n\n    applyToAll = function (rule, prop, value) {\n        this.each(function (idx, el) {\n            $(el).data(\"pwstrength-bootstrap\").rules[prop][rule] = value;\n        });\n    };\n\n    methods.changeScore = function (rule, score) {\n        applyToAll.call(this, rule, \"scores\", score);\n    };\n\n    methods.ruleActive = function (rule, active) {\n        applyToAll.call(this, rule, \"activated\", active);\n    };\n\n    methods.ruleIsMet = function (rule) {\n        if ($.isFunction(rulesEngine.validation[rule])) {\n            if (rule === \"wordMinLength\") {\n                rule = \"wordMinLengthStaticScore\";\n            } else if (rule === \"wordMaxLength\") {\n                rule = \"wordMaxLengthStaticScore\";\n            }\n\n            var rulesMetCnt = 0;\n\n            this.each(function (idx, el) {\n                var options = $(el).data(\"pwstrength-bootstrap\");\n\n                rulesMetCnt += rulesEngine.validation[rule](options, $(el).val(), 1);\n            });\n\n            return (rulesMetCnt === this.length);\n        }\n\n        $.error(\"Rule \" + rule + \" does not exist on jQuery.pwstrength-bootstrap.validation\");\n    };\n\n    $.fn.pwstrength = function (method) {\n        var result;\n\n        if (methods[method]) {\n            result = methods[method].apply(this, Array.prototype.slice.call(arguments, 1));\n        } else if (typeof method === \"object\" || !method) {\n            result = methods.init.apply(this, arguments);\n        } else {\n            $.error(\"Method \" +  method + \" does not exist on jQuery.pwstrength-bootstrap\");\n        }\n\n        return result;\n    };\n}(jQuery, methods));\n}(jQuery));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))\n\n//# sourceURL=webpack:///./node_modules/pwstrength-bootstrap/dist/pwstrength-bootstrap.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n//# sourceURL=webpack:///(webpack)/buildin/module.js?");

/***/ }),

/***/ "jquery":
/*!********************************!*\
  !*** external "window.jQuery" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = window.jQuery;\n\n//# sourceURL=webpack:///external_%22window.jQuery%22?");

/***/ }),

/***/ "jsdom":
/*!*******************************!*\
  !*** external "window.jsdom" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("if(typeof window.jsdom === 'undefined') {var e = new Error(\"Cannot find module 'window.jsdom'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = window.jsdom;\n\n//# sourceURL=webpack:///external_%22window.jsdom%22?");

/***/ })

/******/ });
});;