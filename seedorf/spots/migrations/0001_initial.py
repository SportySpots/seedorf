# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-23 10:35
from __future__ import unicode_literals

import datetime
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
import seedorf.spots.models
import seedorf.spots.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('sports', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Deleted At')),
                ('name', models.CharField(max_length=255, verbose_name='Spot Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='name', unique=True, verbose_name='Spot Slug')),
                ('owner', models.CharField(blank=True, default='', max_length=255, unique=True, verbose_name='Spot Owner')),
                ('description', models.TextField(blank=True, default='', max_length=4096, verbose_name='Spot Description')),
                ('logo', models.ImageField(blank=True, max_length=255, upload_to=seedorf.spots.models.get_logo_upload_directory, verbose_name='Spot Logo')),
                ('homepage_url', models.URLField(blank=True, help_text='Where can we find out more about this spot ?', max_length=500, verbose_name='Spot Homepage URL')),
                ('is_verified', models.BooleanField(default=False, help_text='Is this Spot verfified by the SportySpots team ?')),
                ('is_permanently_closed', models.BooleanField(default=False, help_text='Is this Spot permanently closed ?')),
                ('is_public', models.BooleanField(default=True, help_text='Is this Spot a public spot ?')),
                ('is_temporary', models.BooleanField(default=False, help_text='Is this spot temporary (e.g. for a special event) ?')),
                ('establishment_date', models.DateField(blank=True)),
                ('closure_date', models.DateField(blank=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_address', to='locations.Address')),
                ('sports', models.ManyToManyField(related_name='sport_spots', to='sports.Sport')),
            ],
            options={
                'verbose_name': 'Spot',
                'verbose_name_plural': 'Spots',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SpotAmenity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(validators=[seedorf.spots.validators.AllowedKeysValidator(['INDOOR', 'OUTDOOR', 'WIDTH', 'BREADTH', 'SIZE', 'HAS_FLOODLIGHTS', 'SURFACE', 'LOCATION', 'FENCE', 'FIELD_MARKINGS', 'SOCCER_GOALS_ONE_SIDED', 'SOCCER_GOALS_BOTH_SIDED', 'SOCCER_GOALS_SIZE', 'BASKETBALL_POLE_ONE_SIDED', 'BASKETBALL_POLE_BOTH_SIDED', 'MULTISPORT_FIELD'])])),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sports_amenities', to='sports.Sport', verbose_name='Sport Amenity')),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_amenities', to='spots.Spot', verbose_name='Spot Amenity')),
            ],
            options={
                'verbose_name': 'Spot Amenity',
                'verbose_name_plural': 'Spot Amenities',
            },
        ),
        migrations.CreateModel(
            name='SpotImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Unique Identifier')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, verbose_name='Modified At')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Deleted At')),
                ('image', models.ImageField(blank=True, upload_to=seedorf.spots.models.get_images_upload_directory)),
                ('is_flagged', models.BooleanField(default=False, help_text='Is this image marked as offensive/ non-relevant ?')),
                ('is_user_submitted', models.BooleanField(default=True, editable=False, help_text='Is this image submitted by the user ?')),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_images', to='spots.Spot')),
            ],
            options={
                'verbose_name': 'Spot Image',
                'verbose_name_plural': 'Spot Images',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SpotOpeningTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')], max_length=25)),
                ('start_time', models.TimeField(default=datetime.time(0, 0))),
                ('end_time', models.TimeField(default=datetime.time(23, 59, 59, 999999))),
                ('is_closed', models.BooleanField(default=False)),
                ('spot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_opening_times', to='spots.Spot')),
            ],
            options={
                'verbose_name': 'Spot Image',
                'verbose_name_plural': 'Spot Images',
            },
        ),
    ]
