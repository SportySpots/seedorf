server {
    listen 80;
    {% if deploy.ssl %}
    listen 443 ssl;
    {% endif %}

    server_names_hash_bucket_size 128;
    server_name {% if item.subdomain is defined %}{{ item.subdomain }}{% else %}{{ instance.name }}{% endif %}.{{ deploy.domain }};

{% if deploy.ssl %}
    ssl_certificate /etc/ssl/mijnstroom{% if item.subdomain is defined %}-{{ item.subdomain }}{% endif %}_{{ deploy.type }}.crt;
    ssl_certificate_key /etc/ssl/mijnstroom_{{ deploy.type }}.key;

    ssl_prefer_server_ciphers On;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_dhparam  /etc/nginx/dh2048.pem;
{% endif %}

    error_log syslog:server=unix:/var/log/syslog;
    access_log syslog:server=unix:/var/log/syslog,severity={{ deploy.loglevel }};

    keepalive_timeout 5;
    client_max_body_size 2G;
    # Prevent: 400 Bad Request Request Header Or Cookie Too Large
    large_client_header_buffers 4 16k;

    # path for static files
    location /static/ {
        alias /srv/{{ instance.name }}/static/;
    }
    location /media/mail-queue/ {
        return 404;
    }
    location /media/ {
        alias /srv/{{ instance.name }}/media/;
    }

    # Add nice user message when supervisor is down
    error_page 502 /error/502.html;
    location /error/ {
        alias  /srv/error-pages/;
    }

    location / {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_read_timeout 300;

        proxy_pass http://unix:/tmp/{{ instance.name }}.sock:/{{ item.path|default() }};
    }
}
