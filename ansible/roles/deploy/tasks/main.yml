---
- include: dev_tools.yml

- include: users.yml

- include: known_hosts.yml

- name: Setup Nginx
  include_role:
    name: geerlingguy.nginx
  vars:
    nginx_vhosts:
    - listen: "80"
      server_name: "{{ deploy.sub_domain }}.{{ domain }} {{ deploy.type }}.{{ domain }}"
      filename: "{{ deploy.sub_domain }}.{{ domain }}.80.conf"
      state: "present"
      access_log: "/var/log/nginx/sportyspots-{{ deploy.type }}-access.log"
      error_log: "/var/log/nginx/sportyspots-{{ deploy.type }}-error.log"
      return: "301 https://{{ deploy.sub_domain }}.{{ domain }}$request_uri"
    - listen: "443 ssl http2"
      server_name: "{{ deploy.sub_domain }}.{{ domain }} {{ deploy.type }}.{{ domain }}"
      state: "present"
      filename: "{{ deploy.sub_domain }}.{{ domain }}.443.conf"
      access_log: "/var/log/nginx/sportyspots-{{ deploy.type }}-access.log"
      error_log: "/var/log/nginx/sportyspots-{{ deploy.type }}-error.log"
      extra_parameters: |
        ssl_certificate     /etc/letsencrypt/live/{{ deploy.sub_domain }}.{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ deploy.sub_domain }}.{{ domain }}/privkey.pem;
        ssl_protocols       TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # deny illegal Host headers
        if ($host !~* ^({{ deploy.sub_domain }}.{{ domain }})$ ) {
            return 444;
        }

        # path for static files
        location /static/ {
            alias /home/ubuntu/sportyspots/{{ deploy.type }}/staticfiles/;
        }
        location /media/ {
            alias /home/ubuntu/sportysptos/{{ deploy.type }}/media/;
        }

        # Add nice user message when supervisor is down
        error_page 502 /error/502.html;
        location /error/ {
            alias  /srv/error-pages/;
        }

        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_redirect off;
          proxy_read_timeout 300;

          proxy_pass http://unix:/tmp/sportyspots-{{ deploy.type }}.sock;
        }

        # If Django is not specifically addressed always return 404
        # This prevents all the cracking /xmlrpc.php etc. to show up and trigger
        # Django errors
        # return 404;
  notify: restart_nginx
  handlers:
    - include: ../../handlers.yml

- name: Install Letsencrypt Certbot
  include_role:
    name: geerlingguy.certbot
  vars:
    certbot_auto_renew: true
    certbot_admin_email: admin@sportyspots.com
    certbot_create_if_missing: yes
    certbot_create_standalone_stop_services:
      - nginx
    certbot_certs:
      - domains:
          - "{{ deploy.sub_domain }}.{{ domain }}"
          - "{{ deploy.type }}.{{ domain }}"

- name: Deploy instances
  include: deploy_project.yml
  become_user: ubuntu
  tags: deploy_project

#- name: Test secure connection to SSL domain.
#  uri:
#    url: "https://{{ deploy.sub_domain }}.{{ domain }}/api/"
#    status_code: 200
#  delegate_to: localhost
#  become: False
...
