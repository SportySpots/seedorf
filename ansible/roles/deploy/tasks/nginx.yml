---
- name: Setup Nginx
  include_role:
    name: geerlingguy.nginx
  vars:
    nginx_vhosts:
    - listen: 80
      server_name: "{{ sub_domain }}.{{ domain }} {{ env }}.{{ domain }}"
      filename: "{{ sub_domain }}.{{ domain }}.80.conf"
      state: present
      access_log: "/var/log/nginx/sportyspots-{{ env }}-access.log"
      error_log: "/var/log/nginx/sportyspots-{{ env }}-error.log"
      return: "301 https://{{ sub_domain }}.{{ domain }}$request_uri"
    - listen: "443 ssl http2"
      server_name: "{{ sub_domain }}.{{ domain }} {{ env }}.{{ domain }}"
      state: present
      filename: "{{ sub_domain }}.{{ domain }}.443.conf"
      access_log: "/var/log/nginx/sportyspots-{{ env }}-access.log"
      error_log: "/var/log/nginx/sportyspots-{{ env }}-error.log"
      extra_parameters: |
        ssl_certificate     /etc/letsencrypt/live/{{ sub_domain }}.{{ domain }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ sub_domain }}.{{ domain }}/privkey.pem;
        ssl_protocols       TLSv1.1 TLSv1.2;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        # deny illegal Host headers
        if ($host !~* ^({{ sub_domain }}.{{ domain }})$ ) {
            return 444;
        }

        # path for static files
        location /static/ {
            alias /home/ubuntu/sportyspots/{{ env }}/staticfiles/;
        }
        location /media/ {
            alias /home/ubuntu/sportysptos/{{ env }}/media/;
        }

        # Add nice user message when supervisor is down
        error_page 502 /error/502.html;
        location /error/ {
            alias  /srv/error-pages/;
        }

        location / {
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_redirect off;
          proxy_read_timeout 300;

          proxy_pass http://unix:/tmp/sportyspots-{{ env }}.sock;
        }

        # If Django is not specifically addressed always return 404
        # This prevents all the cracking /xmlrpc.php etc. to show up and trigger
        # Django errors
        # return 404;
  notify: restart_nginx
...
