---
- name: Ensure project directories exist for {{ instance.name }}
  become_user: root
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: deploy
    group: deploy
  with_items:
    - "/srv/{{ instance.name }}"

- name: Ensure project repository for {{ instance.name }} exists
  become_user: deploy
  git:
    repo: ssh://git@github.com/zonnepanelendelen/mijnstroom.git
    dest: "/srv/{{ instance.name }}"
    update: yes
    key_file: "/home/deploy/.ssh/id_rsa"
  loop_control:
    label: "{{ instance.name }}"
  notify: project_changed

- name: Install dependencies for {{ instance.name }}
  become_user: deploy
  pip:
    requirements: "/srv/{{ instance.name }}/requirements/{{ deploy.type }}.txt"
    virtualenv: "/srv/{{ instance.name }}/virtualenv/"
    virtualenv_python: python2.7
  notify: restart_supervisor

- name: Install js dependencies for {{ instance.name }}
  become_user: deploy
  bower:
    path:  "/srv/{{ instance.name }}/"

- name: Generate deploy config for {{ instance.name }}
  become_user: deploy
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: environment, dest: "/srv/{{ instance.name }}/.env" }

- name: Run migrations for {{ instance.name }}
  become_user: deploy
  django_manage:
    command: migrate
    app_path: "/srv/{{ instance.name }}"
    settings: "mijnstroom.settings.{{ deploy.type }}"
    virtualenv: "/srv/{{ instance.name }}/virtualenv/"

- name: Run collectstatic for {{ instance.name }}
  become_user: deploy
  django_manage:
    command: collectstatic
    app_path: "/srv/{{ instance.name }}"
    settings: "mijnstroom.settings.{{ deploy.type }}"
    virtualenv: "/srv/{{ instance.name }}/virtualenv/"
  notify: flush_redis

- name: Generate nginx config for {{ instance.name }}
  become_user: root
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - name: mijnstroom
      src: nginx.conf
      dest: "/etc/nginx/sites-available/{{ instance.name }}.conf"
    #- name: mijnstroom-dashboard
      #src: nginx.conf
      #dest: "/etc/nginx/sites-available/{{ instance.name }}-dashboard.conf"
      #subdomain: dashboard
      #path: dashboard/
  notify:
    - restart_nginx

- name: Generate supervisor config for {{ instance.name }}
  become_user: root
  template:
    src: supervisor.conf
    dest: "/etc/supervisor/conf.d/{{ instance.name }}.conf"
  notify:
    - restart_supervisor

- name: Ensure site enabled on nginx for {{ instance.name }}
  become_user: root
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    state: link
  with_items:
    - name: mijnstroom
      src: "/etc/nginx/sites-available/{{ instance.name }}.conf"
      dest: "/etc/nginx/sites-enabled/{{ instance.name }}.conf"
    #- name: mijnstroom-dashboard
      #src: "/etc/nginx/sites-available/{{ instance.name }}-dashboard.conf"
      #dest: "/etc/nginx/sites-enabled/{{ instance.name }}-dashboard.conf"
  notify:
    - restart_nginx

- name: Ensure logging redirected for {{ instance.name }}
  become_user: root
  template:
    src: rsyslog.conf
    dest: /etc/rsyslog.d/40-{{ instance.name }}.conf
  notify:
    - restart_rsyslog

- name: Ensure project maintenance cron
  template:
    src: project-maintenance.cron
    dest: "/etc/cron.daily/maintenance-{{ instance.name }}"
